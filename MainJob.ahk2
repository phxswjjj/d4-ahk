#Include ./Utility/Common.ahk2

AppExe := "Diablo IV.exe"
UniqueID := WinExist("ahk_exe " AppExe)
if not UniqueID {
    OutputLog("[" AppExe "] not found")
    ExitApp
}
OutputLog("[" AppExe "] found [" UniqueID "]")

SetTimer LifeMonitor, 200

SetTimer SendSkill, 100

Return

LifeMonitor()
{
    If not WinActive("ahk_id " UniqueID)
    {
        ToolTip()
        Return
    }

    ; 血池白點
    ; if !PixelSearch(&Px, &Py, 639, 953, 639, 953, 0xCBCCCC, 3)
    ;     return

    ; 藍池白點
    if !HasManaPool() {
        ToolTip()
        return
    }

    ; MANA
    if AppConfigSetting.EnableManaTip {
        if PixelSearch(&Px, &Py, 1310, 986, 1310, 986, 0x1D1F21, 3)
            ToolTip()
        else if PixelSearch(&Px, &Py, 1310, 986, 1310, 986, 0x0F1316, 3)
            ToolTip()
        else if PixelSearch(&Px, &Py, 1295, 933, 1295, 933, 0x0F1316, 3)
            ; ToolTip("●●●○○", 900, 430)
            ToolTip()
        else
            ToolTip("●●●●●", 900, 430)
    }

    ; 2/3血
    ; if IsLifeColor(611, 954)
    ;     return

    ; 1/3血
    ; if IsLifeColor(609, 1015)
    ;     return
    ; 1/2血
    if IsLifeColor(609, 990)
        return

    ; 血池少1/3
    ; if !PixelSearch(&Px, &Py, 611, 954, 611, 954, 0x0F0E12, 3)
    ;     return
    ; 血池少1/2
    ; if !PixelSearch(&Px, &Py, 609, 980, 609, 980, 0x181918, 3)
    ;     return

    for setting in LifeSettings {
        if setting.Fire() {
            Send(setting.KeyChar)
            OutputDebug("Send " setting.KeyChar "`n")
            Sleep(200)
            break
        }
    }
}

SendSkill()
{
    If !WinActive("ahk_id " UniqueID)
    {
        Return
    }

    isRButtonPress := GetKeyState("RButton", "P")

    If isRButtonPress or GetKeyState("VKC0", "P")
    {
        ; 藍池白點
        if !HasManaPool() {
            return
        }

        for setting in SkillSettings {
            if setting.Fire(isRButtonPress) {
                Send(setting.KeyChar)
                break
            }
        }
    }
}

IsLifeColor(posX, posY)
{
    color := PixelGetColor(posX, posY)
    red := "0x" SubStr(color, 3, 2)
    red := red + 0
    green := "0x" SubStr(color, 5, 2)
    green := green + 0
    blue := "0x" SubStr(color, 7, 2)
    blue := blue + 0

    ; 其他視窗
    if red=7 and green=6 and blue=8
        return true
    
    ; 明顯的血
    if red-green>20 and red-blue>20
        return true
    if red>20 and green<10 and blue<15
        return true
    if red>30 and green<20 and blue<20
        return true
    if red>60 and green<25 and blue<25
        return true
    ; 護盾+血
    if red>90 and green<40 and blue>80
        return true
    ; 護盾/易傷+血
    if Between(red, 29, 111) and Between(green, 4, 28) and Between(blue, 11, 81)
        return true
        
    ; 中毒
    if red>100 and green<40 and blue<15
        return true

    ; 偏灰
    if Between(red, 25, 62) and Between(green, 25, 66) and Between(blue, 25, 70) {
        OutputDebug("灰, red: " red ", green: " green ", blue: " blue
        ", hex: " SubStr(color, 3, 6) "`n")
        return false
    }
    ; 偏暗紅灰
    if Between(red, 65, 91) and Between(red-green, 10, 15) and Between(red-blue, 10, 20) {
        OutputDebug("暗紅灰, red: " red ", green: " green ", blue: " blue
        ", hex: " SubStr(color, 3, 6) "`n")
        return false
    }

    ; 無法判斷，偵測
    OutputDebug("red: " red ", green: " green ", blue: " blue
        ", hex: " SubStr(color, 3, 6) "`n")
    return red > 20
}
HasManaPool() {
    ; 藍池白點
    return PixelSearch(&Px, &Py, 1336, 954, 1336, 954, 0xCDCDCB, 6)
}


^!z:: ; Control+Alt+Z hotkey.
{
    OutputLog("Z pressed")
    OutputLog("Stopped")
    ExitApp
}